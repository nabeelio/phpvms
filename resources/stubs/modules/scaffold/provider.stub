<?php

namespace $NAMESPACE$;

use Illuminate\Support\ServiceProvider;
use Route;

/**
 * Class $CLASS$
 * @package $NAMESPACE$
 */
class $CLASS$ extends ServiceProvider
{
    private $moduleSvc;

    protected $defer = false;

    /**
     * Boot the application events.
     */
    public function boot()
    {
        $this->moduleSvc = app('App\Services\ModuleService');

        $this->registerRoutes();
        $this->registerTranslations();
        $this->registerConfig();
        $this->registerViews();

        $this->registerLinks();

        $this->loadMigrationsFrom(__DIR__ . '/../$MIGRATIONS_PATH$');
    }

    /**
     * Register the service provider.
     */
    public function register()
    {
        //
    }

    /**
     * Add module links here
     */
    public function registerLinks()
    {
        // Show this link if logged in
        // $this->moduleSvc->addFrontendLink('$STUDLY_NAME$', '/$LOWER_NAME$', '', $logged_in=true);

        // Admin links:
        $this->moduleSvc->addAdminLink('$STUDLY_NAME$', '/admin/$LOWER_NAME$');
    }

    /**
     * Register the routes
     */
    protected function registerRoutes()
    {
        /**
         * Routes for the frontend
         */
        Route::group([
            'as' => '$LOWER_NAME$.',
            'prefix' => '$LOWER_NAME$',
            // If you want a RESTful module, change this to 'api'
            'middleware' => ['web'],
            'namespace' => '$MODULE_NAMESPACE$\$STUDLY_NAME$\Http\Controllers'
        ], function() {
            $this->loadRoutesFrom(__DIR__ . '/../Http/Routes/web.php');
        });

        /**
         * Routes for the admin
         */
        Route::group([
            'as' => '$LOWER_NAME$.',
            'prefix' => 'admin/$LOWER_NAME$',
            // If you want a RESTful module, change this to 'api'
            'middleware' => ['web', 'role:admin'],
            'namespace' => '$MODULE_NAMESPACE$\$STUDLY_NAME$\Http\Controllers\Admin'
        ], function() {
            $this->loadRoutesFrom(__DIR__ . '/../Http/Routes/admin.php');
        });

        /**
         * Routes for an API
         */
        Route::group([
            'as' => '$LOWER_NAME$.',
            'prefix' => 'api/$LOWER_NAME$',
            // If you want a RESTful module, change this to 'api'
            'middleware' => ['api'],
            'namespace' => '$MODULE_NAMESPACE$\$STUDLY_NAME$\Http\Controllers\Api'
        ], function() {
            $this->loadRoutesFrom(__DIR__ . '/../Http/Routes/api.php');
        });
    }

    /**
     * Register config.
     */
    protected function registerConfig()
    {
        $this->publishes([
            __DIR__.'/../$PATH_CONFIG$/config.php' => config_path('$LOWER_NAME$.php'),
        ], '$LOWER_NAME$');

        $this->mergeConfigFrom(
            __DIR__.'/../$PATH_CONFIG$/config.php', '$LOWER_NAME$'
        );
    }

    /**
     * Register views.
     */
    public function registerViews()
    {
        $viewPath = resource_path('views/modules/$LOWER_NAME$');
        $sourcePath = __DIR__.'/../$PATH_VIEWS$';

        $this->publishes([
            $sourcePath => $viewPath
        ],'views');

        $this->loadViewsFrom(array_merge(array_map(function ($path) {
            return $path . '/modules/$LOWER_NAME$';
        }, \Config::get('view.paths')), [$sourcePath]), '$LOWER_NAME$');
    }

    /**
     * Register translations.
     */
    public function registerTranslations()
    {
        $langPath = resource_path('lang/modules/$LOWER_NAME$');

        if (is_dir($langPath)) {
            $this->loadTranslationsFrom($langPath, '$LOWER_NAME$');
        } else {
            $this->loadTranslationsFrom(__DIR__ .'/../$PATH_LANG$', '$LOWER_NAME$');
        }
    }

    /**
     * Get the services provided by the provider.
     */
    public function provides()
    {
        return [];
    }
}
