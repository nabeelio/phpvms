#
# Run with either `make docker-test` or the following Docker command:
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
#
---
services:
  # This is overriding the docker-compose.yaml file to have a localized version
  # of the contianer that you can use for building/testing
  app:
    build:
      context: .
    environment:
      DB_HOST: mysql
      REDIS_HOST: redis
    volumes:
      - ./:/var/www
#      - ./bootstrap:/var/www/bootstrap
#      - ./config:/var/www/config
#      - ./modules:/var/www/modules
#      - ./public:/var/www/public
#      - ./resources:/var/www/resources
#      - ./storage:/var/www/storage
#      - ./tests:/var/www/tests
#      - ./resources/docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
#      - ./composer.json:/var/www/composer.json
#      - ./composer-lock.json:/var/www/composer-lock.json
#      - ./env.php:/var/www/env.php
    depends_on:
      - mysql
      - redis

  nginx:
    image: nginx:1.15.12-alpine
    command: /bin/sh -c "exec nginx -g 'daemon off;'"
    volumes:
      - ./:/var/www
      - ./resources/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - app

  mysql:
    image: mysql:5.7
    command: "--innodb_use_native_aio=0"
    environment:
      MYSQL_DATABASE: phpvms
      MYSQL_USER: phpvms
      MYSQL_PASSWORD: phpvms
      MYSQL_ROOT_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - ./storage/docker/mysql:/var/lib/mysql
      - ./resources/docker/mysql:/etc/mysql/conf.d
    ports:
      - 3306:3306
