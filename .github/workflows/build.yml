name: 'Build'
on: [push]
jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        php-versions: ['7.4']
    name: PHP ${{ matrix.php-versions }}
    env:
      extensions: intl, pcov, mbstring
      key: cache-v1 
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup cache environment
      id: cache-env
      uses: shivammathur/cache-extensions@v1
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }}
        key: ${{ env.key }}
    - name: Cache extensions
      uses: actions/cache@v1
      with:
        path: ${{ steps.cache-env.outputs.dir }}
        key: ${{ steps.cache-env.outputs.key }}
        restore-keys: ${{ steps.cache-env.outputs.key }}
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }}
        ini-values: post_max_size=256M, short_open_tag=On
        coverage: xdebug
        tools: php-cs-fixer, phpunit
    - name: Shutdown Ubuntu MySQL
      run: sudo service mysql stop 
    - name: Install MariaDB
      uses: getong/mariadb-action@v1.1
      with:
        character set server: 'utf8'
        collation server: 'utf8_general_ci'
        mysql database: 'phpvms'
        mysql root password: ''
        mysql user: ''
        mysql password: ''
    - name: Configure Environment
      run: |
        php --version
        mysql --version
        # add npm packages
        sudo npm i tar-to-zip -g
        # Downgrade composer version to 1.x
        composer self-update --1
        composer install --dev --no-interaction --verbose
        cp .travis/env.travis.php env.php
        cp .travis/phpunit.travis.xml phpunit.xml
        php artisan database:create --reset
        php artisan migrate:refresh --seed
    - name: Run Tests
      run: |
        vendor/bin/php-cs-fixer fix --config=.php_cs -v --dry-run --diff --using-cache=no
        vendor/bin/phpunit --debug --verbose

  # This runs after all of the tests, run have run. Creates a cleaned up version of the
  # distro, and then creates the artifact to push up to S3 or wherever
  artifacts:
    name: 'Create artifacts'
    needs: build
    runs-on: 'ubuntu-18.04'
    #if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
      - uses: olegtarasov/get-tag@v2.1
        id: tagName
      - name: 'Install Release Dependencies'
        run: |
          rm -rf vendor
          composer self-update --1
          composer install --no-dev --prefer-dist --no-interaction --verbose
          sudo chmod +x ./.github/scripts/*
      - name: 'Build Distro'
        run: .github/scripts/build.sh
      - name: Upload to S3
        uses: medlypharmacy/s3-artifacts-action@master
        with:
          aws_access_key_id: ${{ secrets.S3_BUILD_ARTIFACTS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{ secrets.S3_BUILD_ARTIFACTS_SECRET_ACCESS_KEY}}
          aws_s3_bucket_name: ${{ secrets.S3_BUCKET_NAME }}
          source_path: './dist'
          destination_path: '/'
          resource_type: 'DIRECTORY'